name: main

on:
  push:
  pull_request:
  workflow_dispatch:
  schedule:
    - cron: '0 3 * * *'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include: [
          { msystem: MINGW64, prefix:  mingw-w64-x86_64, cc: gcc, cxx: g++ },
          { msystem: MINGW32, prefix:  mingw-w64-i686, cc: gcc, cxx: g++ },
          { msystem: UCRT64,  prefix:  mingw-w64-ucrt-x86_64, cc: gcc, cxx: g++ },
          { msystem: UCRT64,  prefix:  mingw-w64-ucrt-x86_64, cc: clang, cxx: clang++ },
          { msystem: CLANG32, prefix:  mingw-w64-clang-i686, cc: clang, cxx: clang++ },
          { msystem: CLANG64, prefix:  mingw-w64-clang-x86_64, cc: clang, cxx: clang++ },
          { msystem: MSYS, cc: gcc, cxx: g++ },
        ]

    name: ${{ matrix.msystem }}-${{ matrix.cc }}
    runs-on: windows-2022
    env:
      CC: ${{ matrix.cc }}
      CXX: ${{ matrix.cxx }}
    steps:
      - uses: actions/checkout@v2

      - uses: msys2/setup-msys2@v2
        if: ${{ matrix.msystem != 'MSYS' }}
        with:
          msystem: ${{ matrix.msystem }}
          update: true
          install: >-
            ${{ matrix.prefix }}-meson
            ${{ matrix.prefix }}-ninja
            ${{ matrix.prefix }}-cmake
            ${{ matrix.prefix }}-make
            ${{ matrix.prefix }}-${{ matrix.cc != 'gcc' && 'openmp' || 'ninja'}}
            ${{ matrix.prefix }}-${{ matrix.cc != 'gcc' && 'lld' || 'ninja'}}
            ${{ matrix.prefix }}-${{ matrix.cc != 'gcc' && 'libc++' || 'ninja'}}
            ${{ matrix.prefix }}-${{ matrix.msystem != 'CLANG32' && 'rust' || 'ninja'}}
            ${{ matrix.prefix }}-${{ matrix.cc }}
            ${{ matrix.prefix }}-python
            ${{ matrix.prefix }}-python-setuptools
            make

      - uses: msys2/setup-msys2@v2
        if: ${{ matrix.msystem == 'MSYS' }}
        with:
          msystem: ${{ matrix.msystem }}
          update: true
          install: >-
            meson
            ninja
            cmake
            make
            gcc
            python
            python-setuptools

      - name: Add staging repo
        shell: msys2 {0}
        run: |
          sed -i '1s|^|[staging]\nServer = https://repo.msys2.org/staging/\nSigLevel = Never\n|' /etc/pacman.conf

      - name: Update using staging
        run: |
          msys2 -c 'pacman --noconfirm -Suuy'
          msys2 -c 'pacman --noconfirm -Suu'

      - name: Run Toolchain Tests
        shell: msys2 {0}
        run: |
          cd toolchain
          ./test.sh

      - name: Run Rust Tests
        if: ${{ matrix.msystem != 'MSYS' && matrix.msystem != 'CLANG32' }}
        shell: msys2 {0}
        run: |
          cd rust
          ./test.sh

      - name: Run Python Tests
        shell: msys2 {0}
        run: |
          cd python/setuptools-cext
          ./test.sh

      - name: Run CMake Tests
        shell: msys2 {0}
        run: |
          cd cmake
          ./test.sh
